version: 2.1

orbs:
  gh: circleci/github-cli@2.0

parameters:
  version:
    type: string
    default: ""
  platform:
    type: string
    default: ""
  git_ref:
    type: string
    default: ""
  gcs_directory:
    type: string
    default: ""
  build_number:
    type: string
    default: ""
  task:
    type: string
    default: ""
  gcs_url:
    type: string
    default: ""

jobs:
  build_ios:
    macos:
      xcode: 16.2
    resource_class: macos.m1.medium.gen1
    environment:
      PUBLIC_VERSION: << pipeline.parameters.version >>
      BUILD_NUMBER: << pipeline.parameters.build_number >>
      GCS_DIRECTORY: << pipeline.parameters.gcs_directory >>
    working_directory: ~/flash-mobile
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout

      - run:
          name: Check out target git ref
          command: git checkout << pipeline.parameters.git_ref >>

      - run:
          name: Set up Ruby 3.2.2 & Bundler
          command: |
            brew install rbenv ruby-build
            eval "$(rbenv init -)"
            rbenv install -s 3.2.2
            rbenv global 3.2.2
            gem install bundler:2.2.30
            ruby -v && bundle -v

      - restore_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}

      - run:
          name: Install Ruby gems
          command: |
            cd ios
            bundle config set --local path 'vendor/bundle'
            bundle check || bundle install --jobs=4 --retry=3

      - save_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor

      - restore_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}

      - run:
          name: Install JS and iOS dependencies
          command: yarn install

      - save_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
          paths:
            - node_modules
            - ios/Pods

      - run:
          name: Authenticate with Google Cloud
          command: |
            echo $GCLOUD_BUCKET_KEY | base64 --decode > key.json
            gcloud auth activate-service-account --key-file key.json

      - run:
          name: Import Apple WWDR certificate
          command: |
            curl -fsSL https://www.apple.com/certificateauthority/AppleWWDRCAG3.cer \
              -o /tmp/AppleWWDRCAG3.cer
            security import /tmp/AppleWWDRCAG3.cer -k ~/Library/Keychains/login.keychain-db

      - run:
          name: Build and archive iOS app
          command: |
            cd ios
            sed -i'' -e "s/MARKETING_VERSION.*/MARKETING_VERSION = $PUBLIC_VERSION;/g" LNFlash.xcodeproj/project.pbxproj
            bundle exec fastlane build 2>&1 | tee ios_build_output.log
          no_output_timeout: 15m

      - run:
          name: Show Xcode build log if Fastlane fails
          when: on_fail
          command: |
            echo "==== Showing gym log ===="
            cat ~/Library/Logs/gym/Flash-LNFlash.log || echo "Log not found"

      - run:
          name: Upload build artifacts to GCS
          command: |
            timestamp=$(date +%s)
            DEST=gs://flash-mobile-build/flash-mobile/$GCS_DIRECTORY/flash-mobile-$timestamp-v${PUBLIC_VERSION}/
            gsutil cp ios/Flash.ipa $DEST
            gsutil cp ios/Flash.app.dSYM.zip $DEST

      - store_artifacts:
          path: ios/ios_build_output.log

workflows:
  build_ios_and_upload_to_bucket:
    when:
      equal: [ios, << pipeline.parameters.platform >>]
    jobs:
      - build_ios
